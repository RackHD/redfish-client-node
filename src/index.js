(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['./ApiClient', './model/ErrorResponse', './model/Manager100CommandConnectTypesSupported', './model/Manager100CommandShell', './model/Manager100ForceFailover', './model/Manager100GraphicalConnectTypesSupported', './model/Manager100GraphicalConsole', './model/Manager100Manager', './model/Manager100ManagerType', './model/Manager100ModifyRedundancySet', './model/Manager100Reset', './model/Manager100SerialConnectTypesSupported', './model/Manager100SerialConsole', './model/Session100Session', './model/SimpleStorageSimpleStorage', './model/SerialInterfaceSerialInterface', './model/ProcessorCollectionProcessorCollection', './model/SessionService100SessionService', './model/LogEntryCollectionLogEntryCollection', './model/Power100LineInputVoltageType', './model/Power100Power', './model/Power100PowerControl', './model/Power100PowerLimit', './model/Power100PowerLimitException', './model/Power100PowerMetric', './model/Power100PowerSupply', './model/Power100PowerSupplyType', './model/Power100Voltage', './model/SessionCollectionSessionCollection', './model/MessageRegistryMessageRegistry', './model/Role100Role', './model/ManagerAccountManagerAccount', './model/ManagerAccountCollectionManagerAccountCollection', './model/ManagerNetworkProtocol100ManagerNetworkProtocol', './model/ManagerNetworkProtocol100NotifyIPv6Scope', './model/ManagerNetworkProtocol100Protocol', './model/ManagerNetworkProtocol100SSDProtocol', './model/EthernetInterfaceCollectionEthernetInterfaceCollection', './model/SimpleStorage100Device', './model/SimpleStorage100SimpleStorage', './model/LogEntry100EventSeverity', './model/LogEntry100LogEntry', './model/LogEntry100LogEntryCode', './model/LogEntry100LogEntryType', './model/LogEntry100SensorType', './model/EthernetInterfaceEthernetInterface', './model/AccountServiceAccountService', './model/RoleCollectionRoleCollection', './model/ThermalThermal', './model/Privileges100PrivilegeType', './model/JsonSchemaFileJsonSchemaFile', './model/ManagerAccount100ManagerAccount', './model/TaskCollectionTaskCollection', './model/VirtualMediaCollectionVirtualMediaCollection', './model/VirtualMedia100ConnectedVia', './model/VirtualMedia100MediaType', './model/VirtualMedia100VirtualMedia', './model/Task100Task', './model/Task100TaskState', './model/LogServiceLogService', './model/SessionSession', './model/SimpleStorageCollectionSimpleStorageCollection', './model/JsonSchemaFileCollectionJsonSchemaFileCollection', './model/ChassisChassis', './model/PhysicalContext100PhysicalContext', './model/VirtualMediaVirtualMedia', './model/SerialInterfaceCollectionSerialInterfaceCollection', './model/ComputerSystemComputerSystem', './model/Chassis100Chassis', './model/Chassis100ChassisType', './model/Chassis100IndicatorLED', './model/Chassis100Reset', './model/PowerPower', './model/ManagerManager', './model/LogServiceCollectionLogServiceCollection', './model/TaskService100OverWritePolicy', './model/TaskService100TaskService', './model/ComputerSystemCollectionComputerSystemCollection', './model/ManagerCollectionManagerCollection', './model/LogEntryLogEntry', './model/Odata400Context', './model/Odata400Count', './model/Odata400Id', './model/Odata400IdRef', './model/Odata400Type', './model/Thermal100Fan', './model/Thermal100Temperature', './model/Thermal100Thermal', './model/ServiceRoot100ServiceRoot', './model/AccountService100AccountService', './model/LogService100ClearLog', './model/LogService100LogService', './model/LogService100OverWritePolicy', './model/ProcessorProcessor', './model/ComputerSystem100Boot', './model/ComputerSystem100BootSource', './model/ComputerSystem100BootSourceOverrideEnabled', './model/ComputerSystem100ComputerSystem', './model/ComputerSystem100IndicatorLED', './model/ComputerSystem100MemorySummary', './model/ComputerSystem100PowerState', './model/ComputerSystem100ProcessorSummary', './model/ComputerSystem100Reset', './model/ComputerSystem100SystemType', './model/Processor100InstructionSet', './model/Processor100Processor', './model/Processor100ProcessorArchitecture', './model/Processor100ProcessorId', './model/Processor100ProcessorType', './model/RedundancyRedundancy', './model/TaskTask', './model/RoleRole', './model/ChassisCollectionChassisCollection', './model/Message100Message', './model/ResourceDescription', './model/ResourceHealth', './model/ResourceId', './model/ResourceName', './model/ResourceOem', './model/ResourceResetType', './model/ResourceState', './model/ResourceStatus', './model/ResourceUUID', './model/RackHDResetAction', './model/RackHDBootImageBootImage', './model/RackHDBootImageUsers', './model/RackHDBootImageNetworkDevice', './model/RackHDBootImageNetworkAddress', './model/RackHDBootImageBootImageList', './model/Manager100ManagerActions', './model/Manager100ManagerLinks', './model/LogEntry100LogEntryLinks', './model/ManagerAccount100ManagerAccountLinks', './model/Chassis100ChassisActions', './model/Chassis100ChassisLinks', './model/ServiceRoot100ServiceRootLinks', './model/LogService100LogServiceActions', './model/ComputerSystem100ComputerSystemActions', './model/ComputerSystem100ComputerSystemLinks', './api/RedfishvApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ErrorResponse'), require('./model/Manager100CommandConnectTypesSupported'), require('./model/Manager100CommandShell'), require('./model/Manager100ForceFailover'), require('./model/Manager100GraphicalConnectTypesSupported'), require('./model/Manager100GraphicalConsole'), require('./model/Manager100Manager'), require('./model/Manager100ManagerType'), require('./model/Manager100ModifyRedundancySet'), require('./model/Manager100Reset'), require('./model/Manager100SerialConnectTypesSupported'), require('./model/Manager100SerialConsole'), require('./model/Session100Session'), require('./model/SimpleStorageSimpleStorage'), require('./model/SerialInterfaceSerialInterface'), require('./model/ProcessorCollectionProcessorCollection'), require('./model/SessionService100SessionService'), require('./model/LogEntryCollectionLogEntryCollection'), require('./model/Power100LineInputVoltageType'), require('./model/Power100Power'), require('./model/Power100PowerControl'), require('./model/Power100PowerLimit'), require('./model/Power100PowerLimitException'), require('./model/Power100PowerMetric'), require('./model/Power100PowerSupply'), require('./model/Power100PowerSupplyType'), require('./model/Power100Voltage'), require('./model/SessionCollectionSessionCollection'), require('./model/MessageRegistryMessageRegistry'), require('./model/Role100Role'), require('./model/ManagerAccountManagerAccount'), require('./model/ManagerAccountCollectionManagerAccountCollection'), require('./model/ManagerNetworkProtocol100ManagerNetworkProtocol'), require('./model/ManagerNetworkProtocol100NotifyIPv6Scope'), require('./model/ManagerNetworkProtocol100Protocol'), require('./model/ManagerNetworkProtocol100SSDProtocol'), require('./model/EthernetInterfaceCollectionEthernetInterfaceCollection'), require('./model/SimpleStorage100Device'), require('./model/SimpleStorage100SimpleStorage'), require('./model/LogEntry100EventSeverity'), require('./model/LogEntry100LogEntry'), require('./model/LogEntry100LogEntryCode'), require('./model/LogEntry100LogEntryType'), require('./model/LogEntry100SensorType'), require('./model/EthernetInterfaceEthernetInterface'), require('./model/AccountServiceAccountService'), require('./model/RoleCollectionRoleCollection'), require('./model/ThermalThermal'), require('./model/Privileges100PrivilegeType'), require('./model/JsonSchemaFileJsonSchemaFile'), require('./model/ManagerAccount100ManagerAccount'), require('./model/TaskCollectionTaskCollection'), require('./model/VirtualMediaCollectionVirtualMediaCollection'), require('./model/VirtualMedia100ConnectedVia'), require('./model/VirtualMedia100MediaType'), require('./model/VirtualMedia100VirtualMedia'), require('./model/Task100Task'), require('./model/Task100TaskState'), require('./model/LogServiceLogService'), require('./model/SessionSession'), require('./model/SimpleStorageCollectionSimpleStorageCollection'), require('./model/JsonSchemaFileCollectionJsonSchemaFileCollection'), require('./model/ChassisChassis'), require('./model/PhysicalContext100PhysicalContext'), require('./model/VirtualMediaVirtualMedia'), require('./model/SerialInterfaceCollectionSerialInterfaceCollection'), require('./model/ComputerSystemComputerSystem'), require('./model/Chassis100Chassis'), require('./model/Chassis100ChassisType'), require('./model/Chassis100IndicatorLED'), require('./model/Chassis100Reset'), require('./model/PowerPower'), require('./model/ManagerManager'), require('./model/LogServiceCollectionLogServiceCollection'), require('./model/TaskService100OverWritePolicy'), require('./model/TaskService100TaskService'), require('./model/ComputerSystemCollectionComputerSystemCollection'), require('./model/ManagerCollectionManagerCollection'), require('./model/LogEntryLogEntry'), require('./model/Odata400Context'), require('./model/Odata400Count'), require('./model/Odata400Id'), require('./model/Odata400IdRef'), require('./model/Odata400Type'), require('./model/Thermal100Fan'), require('./model/Thermal100Temperature'), require('./model/Thermal100Thermal'), require('./model/ServiceRoot100ServiceRoot'), require('./model/AccountService100AccountService'), require('./model/LogService100ClearLog'), require('./model/LogService100LogService'), require('./model/LogService100OverWritePolicy'), require('./model/ProcessorProcessor'), require('./model/ComputerSystem100Boot'), require('./model/ComputerSystem100BootSource'), require('./model/ComputerSystem100BootSourceOverrideEnabled'), require('./model/ComputerSystem100ComputerSystem'), require('./model/ComputerSystem100IndicatorLED'), require('./model/ComputerSystem100MemorySummary'), require('./model/ComputerSystem100PowerState'), require('./model/ComputerSystem100ProcessorSummary'), require('./model/ComputerSystem100Reset'), require('./model/ComputerSystem100SystemType'), require('./model/Processor100InstructionSet'), require('./model/Processor100Processor'), require('./model/Processor100ProcessorArchitecture'), require('./model/Processor100ProcessorId'), require('./model/Processor100ProcessorType'), require('./model/RedundancyRedundancy'), require('./model/TaskTask'), require('./model/RoleRole'), require('./model/ChassisCollectionChassisCollection'), require('./model/Message100Message'), require('./model/ResourceDescription'), require('./model/ResourceHealth'), require('./model/ResourceId'), require('./model/ResourceName'), require('./model/ResourceOem'), require('./model/ResourceResetType'), require('./model/ResourceState'), require('./model/ResourceStatus'), require('./model/ResourceUUID'), require('./model/RackHDResetAction'), require('./model/RackHDBootImageBootImage'), require('./model/RackHDBootImageUsers'), require('./model/RackHDBootImageNetworkDevice'), require('./model/RackHDBootImageNetworkAddress'), require('./model/RackHDBootImageBootImageList'), require('./model/Manager100ManagerActions'), require('./model/Manager100ManagerLinks'), require('./model/LogEntry100LogEntryLinks'), require('./model/ManagerAccount100ManagerAccountLinks'), require('./model/Chassis100ChassisActions'), require('./model/Chassis100ChassisLinks'), require('./model/ServiceRoot100ServiceRootLinks'), require('./model/LogService100LogServiceActions'), require('./model/ComputerSystem100ComputerSystemActions'), require('./model/ComputerSystem100ComputerSystemLinks'), require('./api/RedfishvApi'));
  }
}(function(ApiClient, ErrorResponse, Manager100CommandConnectTypesSupported, Manager100CommandShell, Manager100ForceFailover, Manager100GraphicalConnectTypesSupported, Manager100GraphicalConsole, Manager100Manager, Manager100ManagerType, Manager100ModifyRedundancySet, Manager100Reset, Manager100SerialConnectTypesSupported, Manager100SerialConsole, Session100Session, SimpleStorageSimpleStorage, SerialInterfaceSerialInterface, ProcessorCollectionProcessorCollection, SessionService100SessionService, LogEntryCollectionLogEntryCollection, Power100LineInputVoltageType, Power100Power, Power100PowerControl, Power100PowerLimit, Power100PowerLimitException, Power100PowerMetric, Power100PowerSupply, Power100PowerSupplyType, Power100Voltage, SessionCollectionSessionCollection, MessageRegistryMessageRegistry, Role100Role, ManagerAccountManagerAccount, ManagerAccountCollectionManagerAccountCollection, ManagerNetworkProtocol100ManagerNetworkProtocol, ManagerNetworkProtocol100NotifyIPv6Scope, ManagerNetworkProtocol100Protocol, ManagerNetworkProtocol100SSDProtocol, EthernetInterfaceCollectionEthernetInterfaceCollection, SimpleStorage100Device, SimpleStorage100SimpleStorage, LogEntry100EventSeverity, LogEntry100LogEntry, LogEntry100LogEntryCode, LogEntry100LogEntryType, LogEntry100SensorType, EthernetInterfaceEthernetInterface, AccountServiceAccountService, RoleCollectionRoleCollection, ThermalThermal, Privileges100PrivilegeType, JsonSchemaFileJsonSchemaFile, ManagerAccount100ManagerAccount, TaskCollectionTaskCollection, VirtualMediaCollectionVirtualMediaCollection, VirtualMedia100ConnectedVia, VirtualMedia100MediaType, VirtualMedia100VirtualMedia, Task100Task, Task100TaskState, LogServiceLogService, SessionSession, SimpleStorageCollectionSimpleStorageCollection, JsonSchemaFileCollectionJsonSchemaFileCollection, ChassisChassis, PhysicalContext100PhysicalContext, VirtualMediaVirtualMedia, SerialInterfaceCollectionSerialInterfaceCollection, ComputerSystemComputerSystem, Chassis100Chassis, Chassis100ChassisType, Chassis100IndicatorLED, Chassis100Reset, PowerPower, ManagerManager, LogServiceCollectionLogServiceCollection, TaskService100OverWritePolicy, TaskService100TaskService, ComputerSystemCollectionComputerSystemCollection, ManagerCollectionManagerCollection, LogEntryLogEntry, Odata400Context, Odata400Count, Odata400Id, Odata400IdRef, Odata400Type, Thermal100Fan, Thermal100Temperature, Thermal100Thermal, ServiceRoot100ServiceRoot, AccountService100AccountService, LogService100ClearLog, LogService100LogService, LogService100OverWritePolicy, ProcessorProcessor, ComputerSystem100Boot, ComputerSystem100BootSource, ComputerSystem100BootSourceOverrideEnabled, ComputerSystem100ComputerSystem, ComputerSystem100IndicatorLED, ComputerSystem100MemorySummary, ComputerSystem100PowerState, ComputerSystem100ProcessorSummary, ComputerSystem100Reset, ComputerSystem100SystemType, Processor100InstructionSet, Processor100Processor, Processor100ProcessorArchitecture, Processor100ProcessorId, Processor100ProcessorType, RedundancyRedundancy, TaskTask, RoleRole, ChassisCollectionChassisCollection, Message100Message, ResourceDescription, ResourceHealth, ResourceId, ResourceName, ResourceOem, ResourceResetType, ResourceState, ResourceStatus, ResourceUUID, RackHDResetAction, RackHDBootImageBootImage, RackHDBootImageUsers, RackHDBootImageNetworkDevice, RackHDBootImageNetworkAddress, RackHDBootImageBootImageList, Manager100ManagerActions, Manager100ManagerLinks, LogEntry100LogEntryLinks, ManagerAccount100ManagerAccountLinks, Chassis100ChassisActions, Chassis100ChassisLinks, ServiceRoot100ServiceRootLinks, LogService100LogServiceActions, ComputerSystem100ComputerSystemActions, ComputerSystem100ComputerSystemLinks, RedfishvApi) {
  'use strict';

  return {
    ApiClient: ApiClient,
    ErrorResponse: ErrorResponse,
    Manager100CommandConnectTypesSupported: Manager100CommandConnectTypesSupported,
    Manager100CommandShell: Manager100CommandShell,
    Manager100ForceFailover: Manager100ForceFailover,
    Manager100GraphicalConnectTypesSupported: Manager100GraphicalConnectTypesSupported,
    Manager100GraphicalConsole: Manager100GraphicalConsole,
    Manager100Manager: Manager100Manager,
    Manager100ManagerType: Manager100ManagerType,
    Manager100ModifyRedundancySet: Manager100ModifyRedundancySet,
    Manager100Reset: Manager100Reset,
    Manager100SerialConnectTypesSupported: Manager100SerialConnectTypesSupported,
    Manager100SerialConsole: Manager100SerialConsole,
    Session100Session: Session100Session,
    SimpleStorageSimpleStorage: SimpleStorageSimpleStorage,
    SerialInterfaceSerialInterface: SerialInterfaceSerialInterface,
    ProcessorCollectionProcessorCollection: ProcessorCollectionProcessorCollection,
    SessionService100SessionService: SessionService100SessionService,
    LogEntryCollectionLogEntryCollection: LogEntryCollectionLogEntryCollection,
    Power100LineInputVoltageType: Power100LineInputVoltageType,
    Power100Power: Power100Power,
    Power100PowerControl: Power100PowerControl,
    Power100PowerLimit: Power100PowerLimit,
    Power100PowerLimitException: Power100PowerLimitException,
    Power100PowerMetric: Power100PowerMetric,
    Power100PowerSupply: Power100PowerSupply,
    Power100PowerSupplyType: Power100PowerSupplyType,
    Power100Voltage: Power100Voltage,
    SessionCollectionSessionCollection: SessionCollectionSessionCollection,
    MessageRegistryMessageRegistry: MessageRegistryMessageRegistry,
    Role100Role: Role100Role,
    ManagerAccountManagerAccount: ManagerAccountManagerAccount,
    ManagerAccountCollectionManagerAccountCollection: ManagerAccountCollectionManagerAccountCollection,
    ManagerNetworkProtocol100ManagerNetworkProtocol: ManagerNetworkProtocol100ManagerNetworkProtocol,
    ManagerNetworkProtocol100NotifyIPv6Scope: ManagerNetworkProtocol100NotifyIPv6Scope,
    ManagerNetworkProtocol100Protocol: ManagerNetworkProtocol100Protocol,
    ManagerNetworkProtocol100SSDProtocol: ManagerNetworkProtocol100SSDProtocol,
    EthernetInterfaceCollectionEthernetInterfaceCollection: EthernetInterfaceCollectionEthernetInterfaceCollection,
    SimpleStorage100Device: SimpleStorage100Device,
    SimpleStorage100SimpleStorage: SimpleStorage100SimpleStorage,
    LogEntry100EventSeverity: LogEntry100EventSeverity,
    LogEntry100LogEntry: LogEntry100LogEntry,
    LogEntry100LogEntryCode: LogEntry100LogEntryCode,
    LogEntry100LogEntryType: LogEntry100LogEntryType,
    LogEntry100SensorType: LogEntry100SensorType,
    EthernetInterfaceEthernetInterface: EthernetInterfaceEthernetInterface,
    AccountServiceAccountService: AccountServiceAccountService,
    RoleCollectionRoleCollection: RoleCollectionRoleCollection,
    ThermalThermal: ThermalThermal,
    Privileges100PrivilegeType: Privileges100PrivilegeType,
    JsonSchemaFileJsonSchemaFile: JsonSchemaFileJsonSchemaFile,
    ManagerAccount100ManagerAccount: ManagerAccount100ManagerAccount,
    TaskCollectionTaskCollection: TaskCollectionTaskCollection,
    VirtualMediaCollectionVirtualMediaCollection: VirtualMediaCollectionVirtualMediaCollection,
    VirtualMedia100ConnectedVia: VirtualMedia100ConnectedVia,
    VirtualMedia100MediaType: VirtualMedia100MediaType,
    VirtualMedia100VirtualMedia: VirtualMedia100VirtualMedia,
    Task100Task: Task100Task,
    Task100TaskState: Task100TaskState,
    LogServiceLogService: LogServiceLogService,
    SessionSession: SessionSession,
    SimpleStorageCollectionSimpleStorageCollection: SimpleStorageCollectionSimpleStorageCollection,
    JsonSchemaFileCollectionJsonSchemaFileCollection: JsonSchemaFileCollectionJsonSchemaFileCollection,
    ChassisChassis: ChassisChassis,
    PhysicalContext100PhysicalContext: PhysicalContext100PhysicalContext,
    VirtualMediaVirtualMedia: VirtualMediaVirtualMedia,
    SerialInterfaceCollectionSerialInterfaceCollection: SerialInterfaceCollectionSerialInterfaceCollection,
    ComputerSystemComputerSystem: ComputerSystemComputerSystem,
    Chassis100Chassis: Chassis100Chassis,
    Chassis100ChassisType: Chassis100ChassisType,
    Chassis100IndicatorLED: Chassis100IndicatorLED,
    Chassis100Reset: Chassis100Reset,
    PowerPower: PowerPower,
    ManagerManager: ManagerManager,
    LogServiceCollectionLogServiceCollection: LogServiceCollectionLogServiceCollection,
    TaskService100OverWritePolicy: TaskService100OverWritePolicy,
    TaskService100TaskService: TaskService100TaskService,
    ComputerSystemCollectionComputerSystemCollection: ComputerSystemCollectionComputerSystemCollection,
    ManagerCollectionManagerCollection: ManagerCollectionManagerCollection,
    LogEntryLogEntry: LogEntryLogEntry,
    Odata400Context: Odata400Context,
    Odata400Count: Odata400Count,
    Odata400Id: Odata400Id,
    Odata400IdRef: Odata400IdRef,
    Odata400Type: Odata400Type,
    Thermal100Fan: Thermal100Fan,
    Thermal100Temperature: Thermal100Temperature,
    Thermal100Thermal: Thermal100Thermal,
    ServiceRoot100ServiceRoot: ServiceRoot100ServiceRoot,
    AccountService100AccountService: AccountService100AccountService,
    LogService100ClearLog: LogService100ClearLog,
    LogService100LogService: LogService100LogService,
    LogService100OverWritePolicy: LogService100OverWritePolicy,
    ProcessorProcessor: ProcessorProcessor,
    ComputerSystem100Boot: ComputerSystem100Boot,
    ComputerSystem100BootSource: ComputerSystem100BootSource,
    ComputerSystem100BootSourceOverrideEnabled: ComputerSystem100BootSourceOverrideEnabled,
    ComputerSystem100ComputerSystem: ComputerSystem100ComputerSystem,
    ComputerSystem100IndicatorLED: ComputerSystem100IndicatorLED,
    ComputerSystem100MemorySummary: ComputerSystem100MemorySummary,
    ComputerSystem100PowerState: ComputerSystem100PowerState,
    ComputerSystem100ProcessorSummary: ComputerSystem100ProcessorSummary,
    ComputerSystem100Reset: ComputerSystem100Reset,
    ComputerSystem100SystemType: ComputerSystem100SystemType,
    Processor100InstructionSet: Processor100InstructionSet,
    Processor100Processor: Processor100Processor,
    Processor100ProcessorArchitecture: Processor100ProcessorArchitecture,
    Processor100ProcessorId: Processor100ProcessorId,
    Processor100ProcessorType: Processor100ProcessorType,
    RedundancyRedundancy: RedundancyRedundancy,
    TaskTask: TaskTask,
    RoleRole: RoleRole,
    ChassisCollectionChassisCollection: ChassisCollectionChassisCollection,
    Message100Message: Message100Message,
    ResourceDescription: ResourceDescription,
    ResourceHealth: ResourceHealth,
    ResourceId: ResourceId,
    ResourceName: ResourceName,
    ResourceOem: ResourceOem,
    ResourceResetType: ResourceResetType,
    ResourceState: ResourceState,
    ResourceStatus: ResourceStatus,
    ResourceUUID: ResourceUUID,
    RackHDResetAction: RackHDResetAction,
    RackHDBootImageBootImage: RackHDBootImageBootImage,
    RackHDBootImageUsers: RackHDBootImageUsers,
    RackHDBootImageNetworkDevice: RackHDBootImageNetworkDevice,
    RackHDBootImageNetworkAddress: RackHDBootImageNetworkAddress,
    RackHDBootImageBootImageList: RackHDBootImageBootImageList,
    Manager100ManagerActions: Manager100ManagerActions,
    Manager100ManagerLinks: Manager100ManagerLinks,
    LogEntry100LogEntryLinks: LogEntry100LogEntryLinks,
    ManagerAccount100ManagerAccountLinks: ManagerAccount100ManagerAccountLinks,
    Chassis100ChassisActions: Chassis100ChassisActions,
    Chassis100ChassisLinks: Chassis100ChassisLinks,
    ServiceRoot100ServiceRootLinks: ServiceRoot100ServiceRootLinks,
    LogService100LogServiceActions: LogService100LogServiceActions,
    ComputerSystem100ComputerSystemActions: ComputerSystem100ComputerSystemActions,
    ComputerSystem100ComputerSystemLinks: ComputerSystem100ComputerSystemLinks,
    RedfishvApi: RedfishvApi
  };
}));
